version: '3.3'

networks:
  starrocks-net:
    driver: bridge
    external: true

services:
  be-server:
    image: starrocks:${STARROCKS_VERSION} 
    container_name: be-server 
    build:
      context: ./image/base
      args:
        STARROCKS_VERSION: ${STARROCKS_VERSION}
        PRIORITY_NETWORKS: ${PRIORITY_NETWORKS}
      dockerfile: Dockerfile
    command: ["/bin/sh", "-c", "/opt/starrocks/be_server.sh"]
    ports:
      - 8040:8040
    volumes:
      - starrocks-be:/opt/starrocks/be
    networks:
      - starrocks-net

  cn-server:
    image: starrocks:${STARROCKS_VERSION} 
    container_name: cn-server 
    build:
      context: ./image/base
      args:
        STARROCKS_VERSION: ${STARROCKS_VERSION}
        PRIORITY_NETWORKS: ${PRIORITY_NETWORKS}
      dockerfile: Dockerfile
    command: ["/bin/sh", "-c", "/opt/starrocks/cn_server.sh"]
    networks:
      - starrocks-net

  fe-server:
    image: starrocks:${STARROCKS_VERSION}
    container_name: fe-server 
    build:
      context: ./image/base
      args:
        STARROCKS_VERSION: ${STARROCKS_VERSION}
        PRIORITY_NETWORKS: ${PRIORITY_NETWORKS}
      dockerfile: Dockerfile
    command: ["/bin/sh", "-c", "/opt/starrocks/fe_server.sh"]
    ports:
      - 9030:9030
      - 8030:8030
    volumes:
      - starrocks-fe:/opt/starrocks/fe
    environment:
      - ROOT_STARROCKS_PASSWORD=${ROOT_STARROCKS_PASSWORD}
      - STARROCKS_USERNAME=${STARROCKS_USERNAME}
      - STARROCKS_PASSWORD=${STARROCKS_PASSWORD}
      - STARROCKS_DATABASE=${STARROCKS_DATABASE}
    networks:
      - starrocks-net
#
volumes:
  starrocks-fe:
    external: true
  starrocks-be:
    external: true
